'''
============================================================
http://projecteuler.net/problem=45

Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle         Tn=n(n+1)/2         1, 3, 6, 10, 15, ...
Pentagonal         Pn=n(3n1)/2         1, 5, 12, 22, 35, ...
Hexagonal         Hn=n(2n1)         1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
============================================================
'''
from problem044 import is_pentagonal
import math, itertools

def is_hexagonal(m):
    n = 0.25 * (1 + math.sqrt(1 + 8 * m))
    return n - int(n) < 1e-15

def is_all(min_t=0):
    for n in itertools.count(1):
        t = n * (n + 1) / 2
        if is_pentagonal(t) and is_hexagonal(t) and t > min_t:
            yield t

def is_all_faster(min_t=0):
    for n in itertools.count(1):
        t = n * (2 * n - 1)
        if is_pentagonal(t) and t > min_t:
            yield t
            
if __name__ == "__main__":
    import time
    start = time.time()
    print list(itertools.islice(is_all(40755), 1))[-1]
    print time.time() - start, 'sec'

    start = time.time()
    print list(itertools.islice(is_all_faster(40755), 1))[-1]
    print time.time() - start, 'sec'
